services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx-multiple-upload
    restart: always
    ports:
      - 5055:80
    volumes:
      - ./conf/.htpasswd:/conf/.htpasswd
      - ./logs:/logs
      - ./src/media/gallery:/internal
    networks:
      - server

  db:
    container_name: db-multiple-upload
    image: postgres:alpine
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDB_VENDOR=postgres
      - PGDATA=/var/lib/postgresql/data
    restart: always
    networks:
      - server

  web:
    build:
      context: .
    container_name: web-multiple-upload
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./src:/usr/src/app
    env_file:
      - .env
    environment:
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASS=${POSTGRES_PASSWORD}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - SHOW_DEBUGGER_TOOLBAR=${SHOW_DEBUGGER_TOOLBAR}
    restart: always
    depends_on:
      - db
    networks:
      - server

networks:
  server:
